cmake_minimum_required(VERSION 3.15)
set(EXE_NAME NeapuNetwork)
include_directories("../base")
if(USE_LIBEVENT)
if(WIN32)
	set(LIB_EVENT_INCLUDE "D:/code/libevent/include" CACHE FILEPATH "libevent include path")
	include_directories(${LIB_EVENT_INCLUDE})
	find_library(LIBEVENT_CORE event_core "D:/code/libevent/lib")
else()
	find_library(LIBEVENT_CORE event_core "/usr/lib" "/usr/local/lib")
endif()
endif()
if (WIN32)
	add_compile_definitions(NEAPU_NETWORK_EXPORTS)
endif()
file(GLOB_RECURSE HEAD_FILES CONFIGURE_DEPENDS "./*.h")
file(GLOB_RECURSE SRC_FILES CONFIGURE_DEPENDS "./*.cpp")
add_library(${EXE_NAME} SHARED ${SRC_FILES} ${HEAD_FILES})
if(USE_LIBEVENT)
target_link_libraries(${EXE_NAME} PUBLIC NeapuBase ${LIBEVENT_CORE} Logger)
else()
target_link_libraries(${EXE_NAME} PUBLIC NeapuBase Logger)
endif()
if(WIN32)
target_link_libraries(${EXE_NAME} PUBLIC ws2_32)
endif()
install(TARGETS ${EXE_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(FILES ${HEAD_FILES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})